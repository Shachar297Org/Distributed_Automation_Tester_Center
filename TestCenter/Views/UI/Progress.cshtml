
@model TestCenter.ViewModels.TestCenterViewModel

@{
    ViewBag.Title = "Test Center";
    ViewBag.pTitle = "Progress";
    ViewBag.pageTitle = "Progress";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<div class="row">
    <div class="col-xl-6">
        <div class="card">
            <div class="card-body">
                <div class="d-flex">
                    <div class="mr-2">
                        <h5 class="card-title mb-4">STAGE</h5>
                    </div>
                    <div class="dropdown ml-auto">
                        <a class="text-muted dropdown-toggle font-size-16" role="button" data-toggle="dropdown" aria-haspopup="true">
                            <i class="mdi mdi-dots-horizontal"></i>
                        </a>

                        <div class="dropdown-menu dropdown-menu-right">
                            <a class="dropdown-item" href="javascript:void(0);">Action</a>
                            <a class="dropdown-item" href="javascript:void(0);">Another action</a>
                            <a class="dropdown-item" href="javascript:void(0);">Something else here</a>
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item" href="javascript:void(0);">Separated link</a>
                        </div>
                    </div>
                </div>
                <div data-simplebar class="mt-2" style="max-height: 400px;">
                    <ul class="verti-timeline list-unstyled">
                        <li class="event-list @(Model.ProgressData.StageData.Count > 1 ? "active" : "")">
                            <div class="event-timeline-dot">
                                <i class="bx bx-right-arrow-circle font-size-18"></i>
                            </div>
                            <div class="media">

                                <div id="timeBlock1" class="mr-3" style="margin-bottom: .5rem; display: @(Model.ProgressData.StageData.Count > 1 ? "inline" : "none")">
                                    <span id="stageTime">@(Model.ProgressData.StageData.Count > 1 ? Model.ProgressData.StageData[1].Time.ToString("HH:mm") : "")</span><i class="bx bx-right-arrow-alt font-size-16 text-primary align-middle ml-2"></i>
                                </div>
                                
                                <div class="mr-3">
                                    <h5 class="font-size-14">@TestCenterConsole.Models.Stage.INIT.ToString()<i class="bx bx-right-arrow-alt font-size-16 text-primary align-middle ml-2"></i></h5>
                                </div>
                                <div class="media-body">
                                    <div>
                                        Sending initialization command to all available Agents </a>
                                    </div>
                                </div>

                            </div>
                        </li>
                        <li class="event-list @(Model.ProgressData.StageData.Count > 2 ? "active" : "")">
                            <div class="event-timeline-dot">
                                <i class="bx bx-right-arrow-circle font-size-18"></i>
                            </div>
                            <div class="media">

                                <div id="timeBlock2" class="mr-3" style="margin-bottom: .5rem; display: @(Model.ProgressData.StageData.Count > 2 ? "inline" : "none")">
                                    <span id="stageTime">@(Model.ProgressData.StageData.Count > 2 ? Model.ProgressData.StageData[2].Time.ToString("HH:mm") : "")</span><i class="bx bx-right-arrow-alt font-size-16 text-primary align-middle ml-2"></i>
                                </div>
                                
                                <div class="mr-3">
                                    <h5 class="font-size-14">@TestCenterConsole.Models.Stage.AGENTS_CONNECT.ToString()<i class="bx bx-right-arrow-alt font-size-16 text-primary align-middle ml-2"></i></h5>
                                </div>
                                <div class="media-body">
                                    <div>
                                        Waiting for all available Agents to connect...</a>
                                    </div>
                                </div>
                            </div>
                        </li>
                        <li class="event-list @(Model.ProgressData.StageData.Count > 3 ? "active" : "")">
                            <div class="event-timeline-dot">
                                <i class="bx bx-right-arrow-circle font-size-18"></i>
                            </div>
                            <div class="media">

                                <div id="timeBlock3" class="mr-3" style="margin-bottom: .5rem; display: @(Model.ProgressData.StageData.Count > 3 ? "inline" : "none") ">
                                    <span id="stageTime">@(Model.ProgressData.StageData.Count > 3 ? Model.ProgressData.StageData[3].Time.ToString("HH:mm") : "")</span><i class="bx bx-right-arrow-alt font-size-16 text-primary align-middle ml-2"></i>
                                </div>
                                
                                <div class="mr-3">
                                    <h5 class="font-size-14">@TestCenterConsole.Models.Stage.DISTRIBUTE_DEVICES.ToString()<i class="bx bx-right-arrow-alt font-size-16 text-primary align-middle ml-2"></i></h5>
                                </div>
                                <div class="media-body">
                                    <div>
                                        Dividing and distributing all devices among connected Agents
                                    </div>
                                </div>
                            </div>
                        </li>
                        <li class="event-list @(Model.ProgressData.StageData.Count > 4 ? "active" : "")">
                            <div class="event-timeline-dot">
                                <i class="bx bx-right-arrow-circle font-size-18"></i>
                            </div>
                            <div class="media">
                                <div id="timeBlock4" class="mr-3" style="margin-bottom: .5rem; display: @(Model.ProgressData.StageData.Count > 4 ? "inline" : "none")">
                                    <span id="stageTime">@(Model.ProgressData.StageData.Count > 4 ? Model.ProgressData.StageData[4].Time.ToString("HH:mm") : "")</span><i class="bx bx-right-arrow-alt font-size-16 text-primary align-middle ml-2"></i>
                                </div>
                                
                                <div class="mr-3">
                                    <h5 class="font-size-14">@TestCenterConsole.Models.Stage.RUN_DEVICES.ToString()<i class="bx bx-right-arrow-alt font-size-16 text-primary align-middle ml-2"></i></h5>
                                </div>
                                <div class="media-body">
                                    <div>
                                        Running devices by Agents ...
                                    </div>
                                </div>
                            </div>
                        </li>
                        <li class="event-list @(Model.ProgressData.StageData.Count > 5 ? "active" : "")">
                            <div class="event-timeline-dot">
                                <i class="bx bx-right-arrow-circle font-size-18"></i>
                            </div>
                            <div class="media">

                                <div id="timeBlock5" class="mr-3" style="margin-bottom: .5rem; display: @(Model.ProgressData.StageData.Count > 5 ? "inline" : "none")">
                                    <span id="stageTime">@(Model.ProgressData.StageData.Count > 5 ? Model.ProgressData.StageData[5].Time.ToString("HH:mm") : "")</span><i class="bx bx-right-arrow-alt font-size-16 text-primary align-middle ml-2"></i>
                                </div>
                                
                                <div class="mr-3">
                                    <h5 class="font-size-14">@TestCenterConsole.Models.Stage.GET_RESULTS.ToString()<i class="bx bx-right-arrow-alt font-size-16 text-primary align-middle ml-2"></i></h5>
                                </div>
                                <div class="media-body">
                                    <div>
                                        Started retreiving the results from Agents
                                    </div>
                                </div>
                            </div>
                        </li>
                        <li class="event-list @(Model.ProgressData.StageData.Count > 6 ? "active" : "")">
                            <div class="event-timeline-dot">
                                <i class="bx bx-right-arrow-circle font-size-18"></i>
                            </div>
                            <div class="media">

                                <div id="timeBlock6" class="mr-3" style="margin-bottom: .5rem; display: @(Model.ProgressData.StageData.Count > 6 ? "inline" : "none")">
                                    <span id="stageTime">@(Model.ProgressData.StageData.Count > 6 ? Model.ProgressData.StageData[6].Time.ToString("HH:mm") : "")</span><i class="bx bx-right-arrow-alt font-size-16 text-primary align-middle ml-2"></i>
                                </div>
                                
                                <div class="mr-3">
                                    <h5 class="font-size-14">@TestCenterConsole.Models.Stage.FINISHED.ToString()<i class="bx bx-right-arrow-alt font-size-16 text-primary align-middle ml-2"></i></h5>
                                </div>
                                <div class="media-body">
                                    <div>
                                        Finished processing
                                    </div>
                                </div>
                            </div>
                        </li>
                    </ul>
                </div>

            </div>
        </div>
        <!-- end card -->
    </div>

    <div class="col-xl-6">
        <div class="card">
            <div class="card-body">
                <div class="row mb-lg-4">

                    <div class="col-lg-6">
                        <div class="card mini-stats-wid">
                            <div class="card-body">
                                <div class="media">
                                    <div class="media-body text-center">
                                        <button type="button" class="ml-auto btn btn-outline-danger waves-effect" id="stopExecution">Stop Execution</button>
                                    </div>

                               </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-6">
                        <div class="card mini-stats-wid">
                            <div class="card-body">
                                <div class="media">
                                    <div class="media-body text-center">
                                        <a href=@Url.Action("Results", "UI") target="_blank" class="ml-auto btn btn-outline-secondary waves-effect" id="viewResults">View Results</a>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row mb-lg-4">

                    <div class="col-lg-6">
                        <div class="card mini-stats-wid">
                            <div class="card-body">
                                <div class="media">
                                    <div class="media-body">
                                        <p class="text-muted font-weight-medium">Number of Devices</p>
                                        <h4 class="mb-0" id="deviceNumber">@(Model.Scenarios.Where(s => s.Status == ScenarioStatus.EXECUTING).Count() != 0 ? Model.Scenarios.Where(s => s.Status == ScenarioStatus.EXECUTING).FirstOrDefault().DevicesNumber : "-")</h4>
                                    </div>

                                    <div class="avatar-sm rounded-circle bg-secondary align-self-center mini-stat-icon">
                                        <span class="avatar-title rounded-circle bg-secondary">
                                            <i class="bx bx-devices font-size-24"></i>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-6">
                        <div class="card mini-stats-wid">
                            <div class="card-body">
                                <div class="media">
                                    <div class="media-body">
                                        <p class="text-muted font-weight-medium">Number of Agents</p>
                                        <h4 class="mb-0" id="numberOfAgents">@(Model.Agents.Where(a => a.Status == TestCenterConsole.Models.AgentStatus.LIVE).Count())</h4>
                                    </div>

                                    <div class="avatar-sm rounded-circle bg-secondary align-self-center mini-stat-icon">
                                        <span class="avatar-title rounded-circle bg-secondary">
                                            <i class="bx bxs-shield font-size-24"></i>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">

                    <div class="col-lg-6">
                        <div class="card mini-stats-wid">
                            <div class="card-body">
                                <div class="media">
                                    <div class="media-body">
                                        <p class="text-muted font-weight-medium">Number of Devices finished</p>
                                        <h4 class="mb-0" id="devicesFinished">@(Model.ProgressData.StageData.Last().DevicesNumberFinished != 0 ? Model.ProgressData.StageData.Last().DevicesNumberFinished : "-")</h4>
                                    </div>

                                    <div class="avatar-sm rounded-circle bg-secondary align-self-center mini-stat-icon">
                                        <span class="avatar-title rounded-circle bg-secondary">
                                            <i class="bx bxs-devices font-size-24"></i>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-6">
                        <div class="card mini-stats-wid">
                            <div class="card-body">
                                <div class="media">
                                    <div class="media-body">
                                        <p class="text-muted font-weight-medium">Number of Events in RDS</p>
                                        <h4 class="mb-0" id="eventsInRds">@(Model.ProgressData.AwsMetricsData.Count != 0 ? Model.ProgressData.AwsMetricsData.Last().EventsInRDS : "-")</h4>
                                    </div>

                                    <div class="avatar-sm rounded-circle bg-secondary align-self-center mini-stat-icon">
                                        <span class="avatar-title rounded-circle bg-secondary">
                                            <i class="bx bxs-check-circle font-size-24"></i>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
            </div>
        </div>
    </div>

</div>


@for (int i = 0; i < Model.Agents.Count; i++)
{

    var agentData = Model.ProgressData.AgentsData.Count > 0 ? Model.ProgressData.AgentsData[i] : null;

    <div class="row agent-@i">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-2">
                            <div class="media">

                                <div class="media-body align-self-center">
                                    <div class="text-muted">
                                        <p class="mb-2">Agent</p>
                                        <h5 class="mb-1">@Model.Agents[i].Name</h5>
                                        <p class="mb-0">@Model.Agents[i].IPAddress:@Model.Agents[i].Port</p>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-8 align-self-center">
                            <div class="text-lg-center mt-4 mt-lg-0">
                                <div class="row">

                                    <div class="col-2">
                                        <div>
                                            <p class="text-muted text-truncate mb-2">Total devices</p>
                                            <h5 class="mb-0" id="agentDevicesNumber">@(Model.ProgressData.AgentsData.Count > 0 && Model.ProgressData.AgentsData[i].Devices.Count > 0 ? Model.ProgressData.AgentsData[i].Devices.Count : "-")</h5>
                                        </div>
                                    </div>
                                    <div class="col-4">
                                        <div>
                                            <p class="text-muted text-truncate mb-2">Status</p>
                                            <h5 class="badge badge-soft-success" id="agentStatus">@(agentData != null ? agentData.Status : "-")</h5>
                                        </div>
                                    </div>
                                    <div class="col-2">
                                        <div>
                                            <p class="text-muted text-truncate mb-2">Clients running</p>
                                            <h5 class="mb-0" id="agentClientsRunning">@(agentData != null ? agentData.ClientsNumber : "-")</h5>
                                        </div>
                                    </div>
                                    <div class="col-2">
                                        <div>
                                            <p class="text-muted text-truncate mb-2">Servers running</p>
                                            <h5 class="mb-0" id="agentsServersRunning">@(agentData != null ? agentData.ServersNumber : "-")</h5>

                                        </div>
                                    </div>
                                    <div class="col-2">
                                        <div>
                                            <p class="text-muted text-truncate mb-2">CPU load</p>
                                            <h5 class="mb-0">-</h5>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-2 d-none d-lg-block">
                            <div class="clearfix  mt-4 mt-lg-0">
                                <div class="dropdown float-right">

                                    <a href="javascript:void(0);" class="dropdown-toggle card-drop" data-toggle="dropdown" aria-expanded="false">
                                        <i class="mdi mdi-dots-horizontal font-size-18"></i>
                                    </a>
                                    <div class="dropdown-menu dropdown-menu-right">
                                        <a class="dropdown-item text-secondary" href="javascript:void(0);">Stop processing</a>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- end row -->
                </div>
            </div>
        </div>
    </div>
    <!-- end row -->
}

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title mb-4 float-sm-left">AWS Processing Service</h4>

                <div class="clearfix"></div>

                <div id="processing_chart" class="apex-charts" dir="ltr"></div>

            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title mb-4 float-sm-left">AWS Device Service</h4>

                <div class="clearfix"></div>

                <div id="device_chart" class="apex-charts" dir="ltr"></div>

            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title mb-4 float-sm-left">AWS Facade Service</h4>

                <div class="clearfix"></div>

                <div id="facade_chart" class="apex-charts" dir="ltr"></div>

            </div>
        </div>
    </div>
</div>

<!-- JAVASCRIPT -->
<script src="~/assets/libs/jquery/jquery.min.js"></script>
<script src="~/assets/libs/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="~/assets/libs/metismenu/metisMenu.min.js"></script>
<script src="~/assets/libs/simplebar/simplebar.min.js"></script>
<script src="~/assets/libs/node-waves/waves.min.js"></script>
<script src="~/assets/js/lang/jquery.multiLanguage.js"></script>

<script type="text/javascript">
    var modelRaw = '@Html.Raw(Json.Serialize(Model))';
    var model = JSON.parse(modelRaw);
</script>

<!-- apexcharts -->
<script src="~/assets/libs/apexcharts/apexcharts.min.js"></script>

<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>

<!-- App js -->
<script src="~/assets/js/app.js"></script>

<script src="~/js/site.js"></script>

